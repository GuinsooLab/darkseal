{
  "$id": "https://open-metadata.org/schema/entity/teams/user.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "User",
  "description": "This schema defines the User entity. A user can be part of 0 or more teams. A special type of user called Bot is used for automation. A user can be an owner of zero or more data assets. A user can also follow zero or more data assets.",
  "type": "object",
  "javaType": "org.openmetadata.catalog.entity.teams.User",
  "javaInterfaces": ["org.openmetadata.catalog.EntityInterface"],
  "definitions": {
    "authenticationMechanism": {
      "type": "object",
      "description": "User/Bot Authentication Mechanism.",
      "properties": {
        "config": {
          "oneOf": [
            {
              "$ref": "./authN/ssoAuth.json"
            },
            {
              "$ref": "./authN/jwtAuth.json"
            }
          ]
        },
        "authType": {
          "enum": ["JWT", "SSO"]
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier that identifies a user entity instance.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "A unique name of the user, typically the user ID from an identity provider. Example - uid from LDAP.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "fullyQualifiedName": {
      "description": "FullyQualifiedName same as `name`.",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "description": {
      "description": "Used for user biography.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "displayName": {
      "description": "Name used for display purposes. Example 'FirstName LastName'.",
      "type": "string"
    },
    "version": {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "email": {
      "description": "Email address of the user.",
      "$ref": "../../type/basic.json#/definitions/email"
    },
    "href": {
      "description": "Link to the resource corresponding to this entity.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "timezone": {
      "description": "Timezone of the user.",
      "type": "string",
      "format": "timezone"
    },
    "isBot": {
      "description": "When true indicates a special type of user called Bot.",
      "type": "boolean",
      "boolean": false
    },
    "isAdmin": {
      "description": "When true indicates user is an administrator for the system with superuser privileges.",
      "type": "boolean",
      "boolean": false
    },
    "authenticationMechanism": {
      "$ref": "#/definitions/authenticationMechanism"
    },
    "profile": {
      "description": "Profile of the user.",
      "$ref": "../../type/profile.json"
    },
    "teams": {
      "description": "Teams that the user belongs to.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "owns": {
      "description": "List of entities owned by the user.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "follows": {
      "description": "List of entities followed by the user.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    },
    "roles": {
      "description": "Roles that the user has been assigned.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "inheritedRoles": {
      "description": "Roles that a user is inheriting either as part of system default role or through membership in teams that have set team default roles.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    }
  },
  "additionalProperties": false,
  "required": ["id", "name", "email", "href"]
}
