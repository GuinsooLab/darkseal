{
  "$id": "https://open-metadata.org/schema/entity/data/chart.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Chart",
  "description": "This schema defines the Chart entity. Charts are built using tables or sql queries by analyzing the data. Charts can be part of Dashboard.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.data.Chart",
  "javaInterfaces": ["org.openmetadata.schema.EntityInterface"],
  "definitions": {
    "chartType": {
      "javaType": "org.openmetadata.schema.type.ChartType",
      "description": "This schema defines the type used for describing different types of charts.",
      "type": "string",
      "enum": [
        "Line",
        "Table",
        "Bar",
        "Area",
        "Pie",
        "Histogram",
        "Scatter",
        "Text",
        "BoxPlot",
        "Other"
      ],
      "javaEnums": [
        {
          "name": "Line"
        },
        {
          "name": "Table"
        },
        {
          "name": "Bar"
        },
        {
          "name": "Area"
        },
        {
          "name": "Pie"
        },
        {
          "name": "Histogram"
        },
        {
          "name": "Scatter"
        },
        {
          "name": "Text"
        },
        {
          "name": "BoxPlot"
        },
        {
          "name": "Other"
        }
      ]
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier that identifies a chart instance.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name that identifies this Chart.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "displayName": {
      "description": "Display Name that identifies this Chart. It could be title or label from the source services.",
      "type": "string"
    },
    "fullyQualifiedName": {
      "description": "A unique name that identifies a dashboard in the format 'ServiceName.ChartName'.",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "description": {
      "description": "Description of the dashboard, what it is, and how to use it.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "version": {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "chartType": {
      "$ref": "#/definitions/chartType"
    },
    "chartUrl": {
      "description": "Chart URL suffix from its service.",
      "type": "string"
    },
    "href": {
      "description": "Link to the resource corresponding to this entity.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "owner": {
      "description": "Owner of this dashboard.",
      "$ref": "../../type/entityReference.json"
    },
    "tables": {
      "description": "Link to table used in this chart.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "followers": {
      "description": "Followers of this chart.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "tags": {
      "description": "Tags for this chart.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "service": {
      "description": "Link to service where this dashboard is hosted in.",
      "$ref": "../../type/entityReference.json"
    },
    "serviceType": {
      "description": "Service type where this chart is hosted in.",
      "$ref": "../services/dashboardService.json#/definitions/dashboardServiceType"
    },
    "usageSummary": {
      "description": "Latest usage information for this database.",
      "$ref": "../../type/usageDetails.json",
      "default": null
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    }
  },
  "required": ["id", "name", "service"],
  "additionalProperties": false
}
